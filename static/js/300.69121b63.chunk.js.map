{"version":3,"file":"static/js/300.69121b63.chunk.js","mappings":"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","sources":["components/Main/Home/SectionFifth/Rate/styles.ts","components/Main/Home/SectionFifth/Rate/index.tsx","components/Main/Home/SectionFifth/styles.ts","components/Main/Home/SectionFifth/index.tsx","components/Main/Home/SectionFour/Benefit/styles.ts","components/Main/Home/SectionFour/Benefit/index.tsx","components/Main/Home/SectionFour/styles.ts","components/Main/Home/SectionFour/index.tsx","components/Main/Home/SectionOne/styles.ts","components/Main/Home/SectionOne/index.tsx","components/Main/Home/SectionSixth/styles.ts","components/Main/Home/SectionSixth/index.tsx","components/Main/Home/SectionThree/CountUp/styles.ts","components/Main/Home/SectionThree/CountUp/index.tsx","components/Main/Home/SectionThree/styles.ts","components/Main/Home/SectionThree/index.tsx","hooks/useIsInViewport.ts","components/Main/Home/SectionTwo/styles.ts","components/Main/Home/SectionTwo/index.tsx","components/Main/Home/SwiperSection/styles.ts","components/Main/Home/SwiperSection/SwiperController/styles.ts","components/Main/Home/SwiperSection/SwiperController/index.tsx","components/Main/Home/SwiperSection/index.tsx","components/Main/Home/SwiperSection/Blog/index.tsx","components/Main/Home/SwiperSection/Testimonial/index.tsx","components/Main/Home/VideoSection/styles.ts","components/Main/Home/VideoSection/index.tsx","components/Buttons/SecondaryButton/styles.ts","components/Buttons/SecondaryButton/index.tsx","components/Main/Home/SectionOne/FirstButtonSection/styles.ts","components/Main/Home/SectionOne/FirstButtonSection/index.tsx","components/Main/Home/SectionOne/FirstSelectionWordText/styles.ts","components/Main/Home/SectionOne/FirstSelectionWordText/index.tsx","components/Main/Home/SectionOne/SecondSelectionWordText/styles.ts","components/Main/Home/SectionOne/SecondSelectionWordText/index.tsx","components/Main/Home/styles.ts","components/Main/Home/index.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport theme from '@/theme';\n\nexport const RateContainer = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  width: ${theme.spaces[17] * 2}px;\n  padding: ${theme.spaces[7]}px ${theme.spaces[4]}px;\n  background-color: ${theme.colors.White};\n  box-shadow: ${theme.boxShadows[3]};\n  border-radius: ${theme.spaces[1]}px;\n  transition: ease 0.3s;\n\n  :hover {\n    background-color: ${theme.colors.Primary};\n\n    button {\n      background-color: ${theme.colors.White};\n\n      span {\n        color: ${theme.colors.Primary};\n      }\n    }\n\n    div > button {\n      :nth-child(1) {\n        background-color: ${theme.colors.White};\n\n        span {\n          color: ${theme.colors.Primary};\n        }\n      }\n\n      :nth-child(2) {\n        background-color: ${theme.colors.Primary};\n        border: 1px solid ${theme.colors.White};\n\n        span {\n          color: ${theme.colors.White};\n        }\n      }\n    }\n\n    h1,\n    li {\n      color: ${theme.colors.White};\n\n      :before {\n        color: ${theme.colors.White};\n      }\n    }\n  }\n`;\n\nexport const RateWrapper = styled.div`\n  width: ${theme.spaces[14]}%;\n`;\n\nexport const PriceContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: ${theme.spaces[3]}px;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: ${theme.spaces[13]}px;\n\n  button:nth-child(2) {\n    border: 1px solid ${theme.colors.Primary};\n    background-color: ${theme.colors.White};\n\n    span {\n      color: ${theme.colors.Primary};\n    }\n  }\n`;\n\nexport const ConditionList = styled.ul`\n  font-family: ${theme.fontFamily[1]};\n  font-size: ${theme.textSize.sm}rem;\n  color: ${theme.colors.Black};\n\n  li {\n    position: relative;\n\n    :not(:last-child) {\n      margin-bottom: ${theme.spaces[3]}px;\n    }\n\n    :before {\n      content: '✓';\n      position: absolute;\n      left: -${theme.spaces[5]}px;\n      color: ${theme.colors.Primary};\n    }\n  }\n`;\n\nexport const ConditionItem = styled.li``;\n","import React, { memo } from 'react';\n\nimport { ReturnComponentType } from '@/commonTypes';\nimport PrimaryButton from '@/components/Buttons/PrimaryButton';\nimport TitleComponent from '@/components/Title';\nimport theme from '@/theme';\n\nimport {\n  ButtonContainer,\n  ConditionItem,\n  ConditionList,\n  PriceContent,\n  RateContainer,\n  RateWrapper,\n} from './styles';\nimport { IRate } from './types';\n\nconst buttonStyle = {\n  primary: {\n    width: theme.spaces[15] * 2,\n    margin: theme.spaces[6],\n  },\n  secondary: {\n    width: theme.spaces[8],\n  },\n};\n\nconst Rate: React.FC<IRate> = ({\n  value: { title, price, currency, term, buttonTitle, conditions },\n}): ReturnComponentType => {\n  const titleCard = currency ? currency + price : price;\n\n  return (\n    <RateContainer>\n      <RateWrapper>\n        <TitleComponent title={title} fontSize={theme.textSize.sm} />\n        <PriceContent>\n          <TitleComponent title={titleCard} fontSize={theme.textSize.md} />\n          <ButtonContainer>\n            {term.map((el, index) => (\n              <PrimaryButton\n                key={`${el + index}`}\n                title={el}\n                styleOptions={buttonStyle.secondary}\n                borderRadius\n              />\n            ))}\n          </ButtonContainer>\n        </PriceContent>\n      </RateWrapper>\n      <PrimaryButton\n        title={buttonTitle}\n        styleOptions={buttonStyle.primary}\n        borderRadius\n      />\n      <ConditionList>\n        {conditions.map((el, index) => (\n          <ConditionItem key={`${el + index}`}>{el}</ConditionItem>\n        ))}\n      </ConditionList>\n    </RateContainer>\n  );\n};\n\nexport default memo(Rate);\n","import styled from 'styled-components';\n\nimport theme from '@/theme';\nimport { handleContainerStyles } from '@/utills';\n\nexport const Container = styled.section`\n  ${handleContainerStyles(theme.spaces[0])};\n`;\n\nexport const ContainerWrapper = styled.div`\n  ${theme.container};\n  flex-direction: column;\n`;\n\nexport const TitleWrapper = styled.div`\n  width: ${theme.spaces[14]}%;\n`;\n\nexport const ContainerContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: ${theme.spaces[14]}%;\n  margin-top: ${theme.spaces[9]}px;\n`;\n","import React, { memo } from 'react';\n\nimport { ReturnComponentType } from '@/commonTypes';\nimport TitleComponent from '@/components/Title';\nimport theme from '@/theme';\n\nimport Rate from './Rate';\nimport { Container, ContainerContent, ContainerWrapper, TitleWrapper } from './styles';\nimport { IFifthSection } from './types';\n\nconst FifthSection: React.FC<IFifthSection> = ({\n  value: { title, tariffs },\n}): ReturnComponentType => (\n  <Container>\n    <ContainerWrapper>\n      <TitleWrapper>\n        <TitleComponent title={title} fontSize={theme.textSize.xl} />\n      </TitleWrapper>\n      <ContainerContent>\n        {tariffs.map(el => (\n          <Rate key={el.id} value={el} />\n        ))}\n      </ContainerContent>\n    </ContainerWrapper>\n  </Container>\n);\n\nexport default memo(FifthSection);\n","import styled from 'styled-components';\n\nexport const Line = styled.div``;\n","import React, { memo } from 'react';\n\nimport { Card } from 'antd';\n\nimport { ReturnComponentType } from '@/commonTypes';\nimport theme from '@/theme';\n\nimport { Line } from './styles';\nimport { IBenefit } from './types';\n\nconst style = {\n  width: theme.spaces[17] * 2,\n  boxShadow: theme.boxShadows[2],\n  overflow: 'hidden',\n};\n\nconst Benefit: React.FC<IBenefit> = ({ title, text, children }): ReturnComponentType => (\n  <Card style={style}>\n    {children}\n    <Line>{title}</Line>\n    {text}\n  </Card>\n);\n\nexport default memo(Benefit);\n","import styled from 'styled-components';\n\nimport theme from '@/theme';\nimport { handleContainerStyles } from '@/utills/handleContainerStyles';\n\nexport const Container = styled.section`\n  ${handleContainerStyles(theme.spaces[16], theme.colors.Background)};\n`;\n\nexport const ContainerWrapper = styled.div`\n  ${theme.container};\n  flex-direction: column;\n`;\n\nexport const Line = styled.div``;\n\nexport const ContainerContext = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const BenefitsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: ${theme.spaces[6]}px;\n\n  > :nth-child(2n + 1) {\n    position: relative;\n    top: -${theme.spaces[3]}%;\n  }\n`;\n","import React, { memo } from 'react';\n\nimport { ReturnComponentType } from '@/commonTypes';\nimport Image from '@/components/Image';\nimport TextComponent from '@/components/Text';\nimport TitleComponent from '@/components/Title';\nimport { HomePageSection } from '@/mocks';\nimport theme from '@/theme';\n\nimport Benefit from './Benefit';\nimport {\n  BenefitsContainer,\n  Container,\n  ContainerContext,\n  ContainerWrapper,\n  Line,\n} from './styles';\nimport { IFourthSection } from './types';\n\nconst {\n  HomeFourthSection: { benefits },\n} = HomePageSection;\n\nconst FourthSection: React.FC<IFourthSection> = ({\n  sectionTitle,\n  sectionText,\n}): ReturnComponentType => (\n  <Container>\n    <ContainerWrapper>\n      <ContainerContext>\n        <Line>\n          {sectionTitle}\n          {sectionText}\n        </Line>\n        <BenefitsContainer>\n          {benefits.map(({ id, title, text, Img }) => (\n            <Benefit\n              key={id}\n              title={\n                <TitleComponent\n                  title={title}\n                  fontSize={theme.textSize.md}\n                  top={theme.spaces[2]}\n                  bottom={theme.spaces[2]}\n                />\n              }\n              text={<TextComponent text={text} maxLines={4} />}\n            >\n              <Image context={<Img />} />\n            </Benefit>\n          ))}\n        </BenefitsContainer>\n      </ContainerContext>\n    </ContainerWrapper>\n  </Container>\n);\n\nexport default memo(FourthSection);\n","import styled from 'styled-components';\n\nimport { DEFAULT_VALUE_STYLE } from '@/constants';\nimport theme from '@/theme';\nimport { handleContainerStyles } from '@/utills/handleContainerStyles';\n\nimport { IFirstSection } from './types';\n\nexport const Container = styled.section<Pick<IFirstSection, 'spacing'>>`\n  ${({ spacing = theme.spaces[0] }) => handleContainerStyles(spacing)};\n`;\n\nexport const ContainerWrapper = styled.div<Pick<IFirstSection, 'flex'>>`\n  ${theme.container};\n  justify-content: ${({ flex }) => (flex ? flex.justifyContent : DEFAULT_VALUE_STYLE)};\n  align-items: ${({ flex }) => (flex ? flex.alignItems : DEFAULT_VALUE_STYLE)};\n`;\n\nexport const ContainerTitle = styled.h1`\n  display: inline-block;\n  width: ${theme.spaces[8]}%;\n  font-size: ${theme.textSize.xl + 0.5}rem;\n  font-weight: bold;\n`;\n\nexport const ContainerContext = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  position: relative;\n  width: ${theme.spaces[7]}%;\n`;\n","import React, { memo } from 'react';\n\nimport { ReturnComponentType } from '@/commonTypes';\n\nimport { Container, ContainerContext, ContainerTitle, ContainerWrapper } from './styles';\nimport { IFirstSection } from './types';\n\nconst FirstSection: React.FC<IFirstSection> = ({\n  title,\n  text,\n  spacing,\n  flex,\n  children,\n}): ReturnComponentType => (\n  <Container spacing={spacing}>\n    <ContainerWrapper flex={flex}>\n      <ContainerTitle>{title}</ContainerTitle>\n      <ContainerContext>\n        {text}\n        {children}\n      </ContainerContext>\n    </ContainerWrapper>\n  </Container>\n);\n\nexport default memo(FirstSection);\n","import styled from 'styled-components';\n\nimport theme from '@/theme';\nimport { handleContainerStyles } from '@/utills';\n\nexport const Container = styled.section`\n  ${handleContainerStyles(theme.spaces[0], theme.colors.Background)};\n  padding: ${theme.spaces[14]}px 0;\n`;\n\nexport const ContainerWrapper = styled.div`\n  ${theme.container};\n  flex-direction: column;\n  text-align: center;\n`;\n","import React from 'react';\n\nimport { ReturnComponentType } from '@/commonTypes';\nimport PrimaryButton from '@/components/Buttons/PrimaryButton';\nimport TextComponent from '@/components/Text';\nimport TitleComponent from '@/components/Title';\nimport { CONTACT_BUTTON_TITLE } from '@/constants';\nimport { HomePageSection } from '@/mocks';\nimport theme from '@/theme';\n\nimport { Container, ContainerWrapper } from './styles';\n\nconst {\n  HomeEighthSection: { title, text },\n} = HomePageSection;\n\nconst SixthSection = (): ReturnComponentType => (\n  <Container>\n    <ContainerWrapper>\n      <TitleComponent title={title} />\n      <TextComponent\n        text={text}\n        top={theme.spaces[6]}\n        bottom={theme.spaces[6]}\n        width={theme.spaces[9]}\n      />\n      <PrimaryButton title={CONTACT_BUTTON_TITLE} boxShadow borderRadius />\n    </ContainerWrapper>\n  </Container>\n);\n\nexport default SixthSection;\n","import styled from 'styled-components';\n\nimport theme from '@/theme';\n\nexport const CountContainerWrapper = styled.div`\n  width: ${theme.spaces[3]}%;\n  text-align: center;\n  overflow: hidden;\n`;\n\nexport const CountWrapper = styled.div`\n  font-family: ${theme.fontFamily[1]};\n  color: ${theme.colors.Primary};\n  font-size: ${theme.spaces[1]}rem;\n  font-weight: bold;\n`;\n\nexport const HomeSectionText = styled.p`\n  font-family: ${theme.fontFamily[1]};\n  font-size: ${theme.textSize.sm}rem;\n  color: ${theme.colors.Grey};\n`;\n","import React, { memo } from 'react';\n\nimport CountUp from 'react-countup';\n\nimport { ReturnComponentType } from '@/commonTypes';\nimport { STARTED_VALUE_COUNT } from '@/constants';\n\nimport { CountContainerWrapper, CountWrapper, HomeSectionText } from './styles';\nimport { ICountUpContainer } from './types';\n\nconst CountUpContainer: React.FC<ICountUpContainer> = ({\n  isView,\n  end,\n  duration,\n  title,\n  suffix,\n}): ReturnComponentType => (\n  <CountContainerWrapper>\n    <CountWrapper>\n      <CountUp\n        scrollSpyOnce\n        duration={duration}\n        end={isView ? end : STARTED_VALUE_COUNT}\n        suffix={suffix}\n      />\n    </CountWrapper>\n    <HomeSectionText>{title}</HomeSectionText>\n  </CountContainerWrapper>\n);\n\nexport default memo(CountUpContainer);\n","import styled from 'styled-components';\n\nimport theme from '@/theme';\nimport { handleContainerStyles } from '@/utills/handleContainerStyles';\n\nexport const Container = styled.section`\n  ${handleContainerStyles(theme.spaces[0])};\n  padding: ${theme.spaces[16]}px 0 ${theme.spaces[12]}px 0;\n`;\n\nexport const ContainerWrapper = styled.div`\n  ${theme.container};\n  flex-direction: column;\n`;\n\nexport const ContainerContext = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: ${theme.spaces[9]}px 0;\n`;\n\nexport const Line = styled.div`\n  animation: 3s linear 1s infinite alternate slidein;\n`;\n","import React, { memo, useRef } from 'react';\n\nimport { ReturnComponentType } from '@/commonTypes';\nimport CountUpContainer from '@/components/Main/Home/SectionThree/CountUp';\nimport { DURATION_VALUE_COUNT } from '@/constants';\nimport { useIsInViewport } from '@/hooks';\nimport { HomePageSection } from '@/mocks';\n\nimport { Container, ContainerContext, ContainerWrapper } from './styles';\nimport { IThirdSection } from './types';\n\nconst {\n  HomeThirdSection: { resultProvideServices },\n} = HomePageSection;\n\nconst ThirdSection: React.FC<IThirdSection> = ({\n  title,\n  text,\n  children,\n}): ReturnComponentType => {\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isView = useIsInViewport(ref);\n\n  return (\n    <Container>\n      <ContainerWrapper>\n        {title}\n        <ContainerContext ref={ref}>\n          {resultProvideServices.map(({ id, titleProvide, amount, suffix }) => (\n            <CountUpContainer\n              key={id}\n              isView={isView}\n              title={titleProvide}\n              duration={DURATION_VALUE_COUNT}\n              end={amount}\n              suffix={suffix}\n            />\n          ))}\n          {text}\n        </ContainerContext>\n        {children}\n      </ContainerWrapper>\n    </Container>\n  );\n};\n\nexport default memo(ThirdSection);\n","import { useEffect, useMemo, useState } from 'react';\n\nexport const useIsInViewport = (ref: any): boolean => {\n  const [isIntersecting, setIsIntersecting] = useState<boolean>(false);\n\n  const observer = useMemo(\n    () =>\n      new IntersectionObserver(([entry]) => {\n        setIsIntersecting(entry.isIntersecting);\n      }),\n    [],\n  );\n\n  useEffect(() => {\n    observer.observe(ref.current);\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [ref, observer]);\n\n  return isIntersecting;\n};\n","import styled from 'styled-components';\n\nimport theme from '@/theme';\nimport { handleContainerStyles } from '@/utills/handleContainerStyles';\n\nexport const Container = styled.section`\n  ${handleContainerStyles(theme.spaces[0], theme.colors.Background)}\n`;\n\nexport const ContainerWrapper = styled.div`\n  ${theme.container};\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nexport const ContainerContext = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n","import React, { memo } from 'react';\n\nimport { ReturnComponentType } from '@/commonTypes';\n\nimport { Container, ContainerContext, ContainerWrapper } from './styles';\nimport { ISecondSection } from './types';\n\nconst SecondSection: React.FC<ISecondSection> = ({\n  title,\n  text,\n  image,\n  children,\n}): ReturnComponentType => (\n  <Container>\n    {image}\n    <ContainerWrapper>\n      {title}\n      <ContainerContext>\n        {text}\n        {children}\n      </ContainerContext>\n    </ContainerWrapper>\n  </Container>\n);\n\nexport default memo(SecondSection);\n","import styled from 'styled-components';\n\nimport theme from '@/theme';\nimport { handleContainerStyles } from '@/utills/handleContainerStyles';\n\nexport const Container = styled.section`\n  ${handleContainerStyles(theme.spaces[0])};\n  padding: ${theme.spaces[16]}px 0 ${theme.spaces[16]}px 0;\n`;\n\nexport const ContainerWrapper = styled.div`\n  ${theme.container};\n  flex-direction: column;\n`;\n\nexport const ContainerTitle = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: ${theme.spaces[14]}%;\n`;\n\nexport const ContainerContext = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: ${theme.spaces[14]}%;\n  margin-top: ${theme.spaces[9]}px;\n`;\n","import styled from 'styled-components';\n\nimport theme from '@/theme';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: ${theme.spaces[17]}px;\n`;\n","import React, { memo } from 'react';\n\nimport { ReturnComponentType } from '@/commonTypes';\n\nimport { Container } from './styles';\nimport { ISwiperController } from './types';\n\nconst SwiperController: React.FC<ISwiperController> = ({\n  leftIcon,\n  rightIcon,\n}): ReturnComponentType => (\n  <Container>\n    {leftIcon}\n    {rightIcon}\n  </Container>\n);\n\nexport default memo(SwiperController);\n","import React, { memo, SyntheticEvent, useCallback, useRef, useState } from 'react';\n\nimport SwiperClass, { Autoplay } from 'swiper';\nimport { Swiper } from 'swiper/react';\nimport 'swiper/css';\n\nimport { ReturnComponentType } from '@/commonTypes';\nimport PrimaryButton from '@/components/Buttons/PrimaryButton';\nimport {\n  ARROW_SWIPER_NEXT,\n  DEFAULT_SWIPER_DELAY_VALUE,\n  DEFAULT_SWIPER_SPACE_BETWEEN_VALUE,\n  ENDING_SWIPER_VALUE,\n  STARTING_SWIPER_VALUE,\n  SVG_ATTRIBUTES,\n} from '@/constants';\nimport theme from '@/theme';\n\nimport { Container, ContainerContext, ContainerTitle, ContainerWrapper } from './styles';\nimport SwiperController from './SwiperController';\nimport { IFifthSection } from './types';\n\nconst arrowStyle = {\n  width: theme.spaces[9],\n  color: 'black',\n  backgroundColor: theme.colors.Background,\n};\n\nconst SwiperSection: React.FC<IFifthSection> = ({\n  title,\n  children,\n  autoPlay,\n  spaceBetween,\n  prevController,\n  nextController,\n}): ReturnComponentType => {\n  const swiperRef = useRef<SwiperClass>();\n\n  const [disablePrevSlide, setDisablePrevSlide] = useState<boolean>(true);\n  const [disableNextSlide, setDisableNextSlide] = useState<boolean>(false);\n\n  const handleDisableController = (progress: number): void => {\n    switch (progress) {\n      case STARTING_SWIPER_VALUE:\n        setDisablePrevSlide(true);\n        setDisableNextSlide(false);\n        break;\n      case ENDING_SWIPER_VALUE:\n        setDisablePrevSlide(false);\n        setDisableNextSlide(prev => !prev);\n        break;\n      default:\n        setDisablePrevSlide(false);\n        setDisableNextSlide(false);\n    }\n  };\n\n  const handleSwiperController = useCallback((e: SyntheticEvent<HTMLButtonElement>) => {\n    if (e.currentTarget.children[SVG_ATTRIBUTES].id === ARROW_SWIPER_NEXT) {\n      swiperRef.current?.slideNext();\n      return;\n    }\n    swiperRef.current?.slidePrev();\n  }, []);\n\n  return (\n    <Container>\n      <ContainerWrapper>\n        <ContainerTitle>\n          {title}\n          <SwiperController\n            leftIcon={\n              <PrimaryButton\n                styleOptions={arrowStyle}\n                icon={prevController}\n                isDisabled={disablePrevSlide}\n                callback={handleSwiperController}\n              />\n            }\n            rightIcon={\n              <PrimaryButton\n                styleOptions={arrowStyle}\n                icon={nextController}\n                isDisabled={disableNextSlide}\n                callback={handleSwiperController}\n              />\n            }\n          />\n        </ContainerTitle>\n        <ContainerContext>\n          <Swiper\n            onBeforeInit={swiper => {\n              swiperRef.current = swiper;\n            }}\n            onProgress={(_, progress) => handleDisableController(progress)}\n            autoplay={\n              autoPlay && {\n                delay: DEFAULT_SWIPER_DELAY_VALUE,\n                disableOnInteraction: false,\n              }\n            }\n            slidesPerView={3}\n            spaceBetween={spaceBetween || DEFAULT_SWIPER_SPACE_BETWEEN_VALUE}\n            modules={[Autoplay]}\n            className=\"mySwiper\"\n          >\n            {children}\n          </Swiper>\n        </ContainerContext>\n      </ContainerWrapper>\n    </Container>\n  );\n};\n\nexport default memo(SwiperSection);\n","import React, { memo } from 'react';\n\nimport { Card } from 'antd';\n\nimport { ReturnComponentType } from '@/commonTypes';\nimport PrimaryButton from '@/components/Buttons/PrimaryButton';\nimport Image from '@/components/Image';\nimport TextComponent from '@/components/Text';\nimport TitleComponent from '@/components/Title';\nimport theme from '@/theme';\n\nimport { IBlog } from './types';\n\nconst { Meta } = Card;\n\nconst style = {\n  container: {\n    width: theme.size.xs,\n    boxShadow: theme.boxShadows[2],\n    overflow: 'hidden',\n  },\n  buttonStyle: {\n    width: theme.spaces[14],\n    backgroundColor: 'none',\n    color: theme.colors.Primary,\n  },\n};\n\nconst Blog: React.FC<IBlog> = ({\n  value: {\n    title,\n    text,\n    image,\n    date,\n    button: { buttonTitle, ButtonImage },\n  },\n}): ReturnComponentType => (\n  <Card style={style.container}>\n    <Image context={image} />\n    <Meta\n      description={\n        <TextComponent text={date} top={theme.spaces[4]} bottom={theme.spaces[2]} />\n      }\n    />\n    <TitleComponent\n      title={title}\n      top={theme.spaces[2]}\n      bottom={theme.spaces[2]}\n      fontSize={theme.textSize.md}\n    />\n    <Meta description={<TextComponent text={text} maxLines={4} />} />\n    <PrimaryButton\n      title={buttonTitle}\n      styleOptions={style.buttonStyle}\n      reverse\n      icon={<ButtonImage />}\n    />\n  </Card>\n);\n\nexport default memo(Blog);\n","import React, { memo } from 'react';\n\nimport { Avatar, Card } from 'antd';\n\nimport { ReturnComponentType } from '@/commonTypes';\nimport TextComponent from '@/components/Text';\nimport TitleComponent from '@/components/Title';\nimport theme from '@/theme';\n\nimport { ITestimonial } from './types';\n\nconst style = {\n  container: {\n    width: theme.spaces[19] * 2,\n    boxShadow: theme.boxShadows[2],\n    overflow: 'hidden',\n  },\n  metaStyle: {\n    alignItems: 'center',\n  },\n};\n\nconst { Meta } = Card;\n\nconst Testimonial: React.FC<ITestimonial> = ({\n  value: { name, comment, image, position },\n}): ReturnComponentType => (\n  <Card style={style.container}>\n    <Meta\n      style={style.metaStyle}\n      avatar={<Avatar size={65} src={image} />}\n      title={<TitleComponent title={name} fontSize={theme.textSize.sm} />}\n      description={<TextComponent text={position} />}\n    />\n    <TextComponent text={comment} top={theme.spaces[5]} maxLines={8} />\n  </Card>\n);\n\nexport default memo(Testimonial);\n","import styled from 'styled-components';\n\nimport theme from '@/theme';\nimport { handleContainerStyles } from '@/utills';\n\nexport const Container = styled.section`\n  ${handleContainerStyles(theme.spaces[0])};\n`;\n\nexport const VideoContainer = styled.div`\n  width: ${theme.spaces[14]}%;\n  height: ${theme.spaces[14]}%;\n  animation: ${theme.animation.spawnAnimation} ease 0.3s;\n`;\n\nexport const VideoWrapper = styled.video`\n  opacity: ${theme.opacity.opacity50};\n  object-fit: cover;\n  height: ${theme.spaces[19] * 4}px;\n  width: ${theme.spaces[14]}%;\n`;\n\nexport const ImageContainer = styled.div`\n  animation: ${theme.animation.spawnAnimation} ease 0.3s;\n`;\n","import React, { useContext } from 'react';\n\nimport { ReturnComponentType } from '@/commonTypes';\nimport Image from '@/components/Image';\nimport { Context } from '@/components/Provider/contex';\nimport { PNG, setShowVideoAC, Video } from '@/constants';\n\nimport { Container, ImageContainer, VideoContainer, VideoWrapper } from './styles';\n\nconst { VideoBg } = Video;\nconst { FirstImageHomeSection } = PNG;\n\nconst VideoSection = (): ReturnComponentType => {\n  const {\n    state: { isVideoShow },\n    dispatch,\n  } = useContext(Context);\n\n  const setEndedVideo = (): void => {\n    dispatch(setShowVideoAC(false));\n  };\n\n  return (\n    <Container>\n      {isVideoShow ? (\n        <VideoContainer>\n          <VideoWrapper autoPlay muted src={VideoBg} onEnded={setEndedVideo} />\n        </VideoContainer>\n      ) : (\n        <ImageContainer>\n          <Image context={FirstImageHomeSection} />\n        </ImageContainer>\n      )}\n    </Container>\n  );\n};\n\nexport default VideoSection;\n","import styled from 'styled-components';\n\nimport theme from '@/theme';\n\nimport { SecondaryButtonWrapperType, StyleOptionsType } from './types';\n\nexport const ButtonWrapper = styled.button<SecondaryButtonWrapperType<StyleOptionsType>>`\n  position: relative;\n  z-index: 1;\n  width: ${theme.spaces[14] + 20}px;\n  height: ${theme.spaces[14] + 20}px;\n  box-shadow: 0 0 0 ${theme.spaces[2]}px ${theme.colors.White};\n  border-radius: 50%;\n  background-color: ${({ styleOptions }) =>\n    styleOptions?.backGroundColor || theme.colors.Primary};\n  cursor: pointer;\n  overflow: hidden;\n  transition: ease 0.3s;\n\n  :after {\n    content: '';\n    position: absolute;\n    width: 85%;\n    height: 85%;\n    top: 7%;\n    left: 7.5%;\n    border: 1px solid rgba(255, 255, 255, 0.4);\n    border-radius: 50%;\n  }\n\n  span {\n    font-size: ${theme.textSize.sm}rem;\n    font-family: ${theme.fontFamily[0]};\n    color: ${({ styleOptions }) => styleOptions?.color || theme.colors.Tertiary};\n  }\n\n  &:hover {\n    opacity: ${theme.opacity.opacity50};\n  }\n\n  &:disabled {\n    background-color: ${theme.colors.Grey};\n  }\n`;\n","import React, { memo } from 'react';\n\nimport { ReturnComponentType } from '@/commonTypes';\n\nimport { ButtonWrapper } from './styles';\nimport { ISecondaryButton, StyleOptionsType } from './types';\n\nconst SecondaryButton: React.FC<ISecondaryButton<StyleOptionsType>> = ({\n  title,\n  styleOptions,\n}): ReturnComponentType => (\n  <ButtonWrapper styleOptions={styleOptions}>\n    <span>{title}</span>\n  </ButtonWrapper>\n);\n\nexport default memo(SecondaryButton);\n","import styled from 'styled-components';\n\nimport theme from '@/theme';\n\nexport const ButtonWrapper = styled.div`\n  position: absolute;\n  bottom: -${theme.spaces[14]}%;\n`;\n","import React from 'react';\n\nimport { ReturnComponentType } from '@/commonTypes';\nimport SecondaryButton from '@/components/Buttons/SecondaryButton';\nimport { ROUND_BUTTON_TITLE } from '@/constants';\n\nimport { ButtonWrapper } from './styles';\n\nconst FirstButtonSection = (): ReturnComponentType => (\n  <ButtonWrapper>\n    <SecondaryButton title={ROUND_BUTTON_TITLE} />\n  </ButtonWrapper>\n);\n\nexport default FirstButtonSection;\n","import styled from 'styled-components';\n\nimport theme from '@/theme';\n\nexport const SelectionWord = styled.span`\n  color: ${theme.colors.Primary};\n`;\n","import React from 'react';\n\nimport { ReturnComponentType } from '@/commonTypes';\n\nimport { SelectionWord } from './styles';\n\nconst FirstSelectionWordText = (): ReturnComponentType => (\n  <>\n    Find true power in your data with <SelectionWord>Ensome</SelectionWord>\n  </>\n);\n\nexport default FirstSelectionWordText;\n","import styled from 'styled-components';\n\nimport theme from '@/theme';\n\nexport const SelectionWord = styled.span`\n  color: ${theme.colors.Primary};\n`;\n","import React from 'react';\n\nimport { ReturnComponentType } from '@/commonTypes';\n\nimport { SelectionWord } from './styles';\n\nconst SecondSelectionWordText = (): ReturnComponentType => (\n  <>\n    The <SelectionWord>newest</SelectionWord> business analytics platform\n  </>\n);\n\nexport default SecondSelectionWordText;\n","import styled from 'styled-components';\n\nimport theme from '@/theme';\n\nexport const MainContainer = styled.main`\n  display: flex;\n  flex-direction: column;\n  background-color: ${theme.colors.Tertiary};\n`;\n","import React from 'react';\n\nimport { SwiperSlide } from 'swiper/react';\n\nimport { ReturnComponentType } from '@/commonTypes';\nimport PrimaryButton from '@/components/Buttons/PrimaryButton';\nimport Image from '@/components/Image';\nimport FifthSection from '@/components/Main/Home/SectionFifth';\nimport FourthSection from '@/components/Main/Home/SectionFour';\nimport FirstSection from '@/components/Main/Home/SectionOne';\nimport SixthSection from '@/components/Main/Home/SectionSixth';\nimport ThirdSection from '@/components/Main/Home/SectionThree';\nimport SecondSection from '@/components/Main/Home/SectionTwo';\nimport SwiperSection from '@/components/Main/Home/SwiperSection';\nimport Blog from '@/components/Main/Home/SwiperSection/Blog';\nimport Testimonial from '@/components/Main/Home/SwiperSection/Testimonial';\nimport VideoSection from '@/components/Main/Home/VideoSection';\nimport TextComponent from '@/components/Text';\nimport TitleComponent from '@/components/Title';\nimport { ANALYTICS_BUTTON_TITLE, NEW_SOLUTION_BUTTON_TITLE, PNG, SVG } from '@/constants';\nimport { HomePageSection } from '@/mocks';\nimport theme from '@/theme';\n\nimport FirstButtonSection from './SectionOne/FirstButtonSection';\nimport FirstSelectionWordText from './SectionOne/FirstSelectionWordText';\nimport SecondSelectionWordText from './SectionOne/SecondSelectionWordText';\nimport { MainContainer } from './styles';\n\nconst {\n  HomeFirstSection,\n  HomeSecondSection,\n  HomeThirdSection,\n  HomeFourthSection,\n  HomeFifthSection,\n  HomeSixthSection,\n  HomeSeventhSection,\n} = HomePageSection;\nconst { SecondImageHomeSection, ClientsImageSection } = PNG;\n\nconst { ArrowLeft, ArrowRight } = SVG;\n\nconst sectionStyle = [\n  { alignItems: 'flex-start' },\n  { justifyContent: 'center', alignItems: 'flex-start' },\n];\n\nconst HomePage = (): ReturnComponentType => (\n  <MainContainer>\n    <FirstSection\n      text={<TextComponent text={HomeFirstSection.text} bottom={theme.spaces[6]} />}\n      title={<FirstSelectionWordText />}\n      spacing={theme.spaces[12]}\n      flex={sectionStyle[0]}\n    >\n      <FirstButtonSection />\n    </FirstSection>\n    <VideoSection />\n    <FirstSection\n      text={<TextComponent text={HomeFirstSection.secondText} bottom={theme.spaces[6]} />}\n      title={<SecondSelectionWordText />}\n      spacing={theme.spaces[17]}\n      flex={sectionStyle[1]}\n    >\n      <PrimaryButton title={ANALYTICS_BUTTON_TITLE} boxShadow borderRadius />\n    </FirstSection>\n    <SecondSection\n      title={\n        <TitleComponent title={HomeSecondSection.title} fontSize={theme.textSize.xl} />\n      }\n      text={\n        <TextComponent\n          text={HomeThirdSection.text}\n          top={theme.spaces[6]}\n          bottom={theme.spaces[6]}\n          width={theme.spaces[9]}\n          fontSize={theme.textSize.md}\n        />\n      }\n      image={<Image context={SecondImageHomeSection} />}\n    >\n      <PrimaryButton title={NEW_SOLUTION_BUTTON_TITLE} boxShadow borderRadius />\n    </SecondSection>\n    <ThirdSection\n      title={\n        <TitleComponent\n          title={HomeThirdSection.title}\n          fontSize={theme.textSize.xl}\n          center\n        />\n      }\n      text={\n        <TextComponent\n          text={HomeThirdSection.text}\n          width={theme.spaces[9]}\n          fontSize={theme.textSize.md}\n        />\n      }\n    >\n      <Image context={ClientsImageSection} />\n    </ThirdSection>\n    <FourthSection\n      sectionTitle={\n        <TitleComponent title={HomeFourthSection.title} fontSize={theme.textSize.xl} />\n      }\n      sectionText={<TextComponent text={HomeFourthSection.text} top={theme.spaces[6]} />}\n    />\n    <SwiperSection\n      autoPlay\n      spaceBetween={100}\n      title={\n        <TitleComponent title={HomeFifthSection.title} fontSize={theme.textSize.xl} />\n      }\n      prevController={<ArrowLeft />}\n      nextController={<ArrowRight />}\n    >\n      {HomeFifthSection.clients.map(el => (\n        <SwiperSlide key={el.id}>\n          <Testimonial value={el} />\n        </SwiperSlide>\n      ))}\n    </SwiperSection>\n    <FifthSection value={HomeSixthSection} />\n    <SwiperSection\n      spaceBetween={10}\n      title={\n        <TitleComponent title={HomeSeventhSection.title} fontSize={theme.textSize.xl} />\n      }\n      prevController={<ArrowLeft />}\n      nextController={<ArrowRight />}\n    >\n      {HomeSeventhSection.blogs.map(el => (\n        <SwiperSlide key={el.id}>\n          <Blog value={el} />\n        </SwiperSlide>\n      ))}\n    </SwiperSection>\n    <SixthSection />\n  </MainContainer>\n);\n\nexport default HomePage;\n"],"names":["RateContainer","styled","theme","RateWrapper","PriceContent","ButtonContainer","ConditionList","ConditionItem","buttonStyle","primary","width","margin","secondary","Rate","value","title","price","currency","term","buttonTitle","conditions","titleCard","Title","fontSize","map","el","index","PrimaryButton","styleOptions","borderRadius","memo","Container","handleContainerStyles","ContainerWrapper","TitleWrapper","ContainerContent","FifthSection","tariffs","id","Line","style","boxShadow","overflow","Benefit","text","children","ContainerContext","BenefitsContainer","benefits","HomePageSection","FourthSection","sectionTitle","sectionText","Img","top","bottom","Text","maxLines","Image","context","spacing","flex","justifyContent","DEFAULT_VALUE_STYLE","alignItems","ContainerTitle","FirstSection","CONTACT_BUTTON_TITLE","CountContainerWrapper","CountWrapper","HomeSectionText","CountUpContainer","isView","end","duration","suffix","scrollSpyOnce","STARTED_VALUE_COUNT","resultProvideServices","ThirdSection","ref","useRef","useState","isIntersecting","setIsIntersecting","observer","useMemo","IntersectionObserver","entry","useEffect","observe","current","disconnect","useIsInViewport","titleProvide","amount","CountUp","DURATION_VALUE_COUNT","SecondSection","image","SwiperController","leftIcon","rightIcon","arrowStyle","color","backgroundColor","SwiperSection","autoPlay","spaceBetween","prevController","nextController","swiperRef","disablePrevSlide","setDisablePrevSlide","disableNextSlide","setDisableNextSlide","handleSwiperController","useCallback","e","currentTarget","SVG_ATTRIBUTES","ARROW_SWIPER_NEXT","slidePrev","slideNext","icon","isDisabled","callback","onBeforeInit","swiper","onProgress","_","progress","STARTING_SWIPER_VALUE","ENDING_SWIPER_VALUE","prev","handleDisableController","autoplay","delay","DEFAULT_SWIPER_DELAY_VALUE","disableOnInteraction","slidesPerView","DEFAULT_SWIPER_SPACE_BETWEEN_VALUE","modules","Autoplay","className","Meta","Card","container","Blog","date","button","ButtonImage","description","reverse","metaStyle","Testimonial","name","comment","position","avatar","size","src","VideoContainer","VideoWrapper","ImageContainer","VideoBg","Video","FirstImageHomeSection","PNG","useContext","Context","isVideoShow","state","dispatch","muted","onEnded","setShowVideoAC","ButtonWrapper","backGroundColor","SecondaryButton","ROUND_BUTTON_TITLE","SelectionWord","MainContainer","HomeFirstSection","HomeSecondSection","HomeThirdSection","HomeFourthSection","HomeFifthSection","HomeSixthSection","HomeSeventhSection","SecondImageHomeSection","ClientsImageSection","ArrowLeft","SVG","ArrowRight","sectionStyle","secondText","ANALYTICS_BUTTON_TITLE","NEW_SOLUTION_BUTTON_TITLE","center","clients","blogs"],"sourceRoot":""}