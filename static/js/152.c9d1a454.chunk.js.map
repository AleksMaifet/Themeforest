{"version":3,"file":"static/js/152.c9d1a454.chunk.js","mappings":"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","sources":["components/Forms/Form/styles.ts","components/Forms/Form/index.tsx","components/Main/Contacts/SectionOne/ListInfoContainer/styles.ts","components/Main/Contacts/SectionOne/ListInfoContainer/index.tsx","components/Main/Contacts/SectionOne/styles.ts","components/Main/Contacts/SectionOne/index.tsx","components/Main/Contacts/SectionOne/SecondSelectionWordText/styles.ts","components/Main/Contacts/SectionOne/SecondSelectionWordText/index.tsx","components/Map/Marker/index.tsx","components/Map/index.tsx","components/Main/Contacts/SectionTwo/index.tsx","components/Main/Contacts/styles.ts","components/Main/Contacts/index.tsx"],"sourcesContent":["import { FieldError } from 'react-hook-form';\nimport styled from 'styled-components';\n\nimport theme from '@/theme';\n\nexport const FormWrapper = styled.form`\n  display: inline-flex;\n  flex-direction: column;\n  width: ${theme.spaces[15] * 4}px;\n`;\n\nexport const FormInformLine = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: ${theme.spaces[14]}%;\n`;\n\nexport const FormButtonWrapper = styled.div`\n  width: ${theme.spaces[14]}%;\n  text-align: end;\n  margin-top: ${theme.spaces[2]}px;\n`;\n\nexport const Line = styled.div``;\n\nexport const ErrorMessage = styled.p<{ error?: FieldError }>`\n  height: ${theme.spaces[4] + 1}px;\n  text-align: center;\n  font-size: ${theme.textSize.sm}rem;\n  color: ${theme.colors.Error};\n  margin: ${theme.spaces[2]}px 0;\n\n  :before {\n    content: ${({ error }) => (error ? 'âš  ' : '')};\n    display: inline;\n`;\n","import React from 'react';\n\nimport { yupResolver } from '@hookform/resolvers/yup/dist/yup';\nimport { SubmitHandler, useForm } from 'react-hook-form';\n\nimport { ReturnComponentType } from '@/commonTypes';\nimport PrimaryButton from '@/components/Buttons/PrimaryButton';\nimport { IForm } from '@/components/Forms/types';\nimport PrimaryInput from '@/components/Input';\nimport { FORM_TITLE, schema } from '@/constants';\nimport theme from '@/theme';\nimport { sendEmailMessage } from '@/utills';\n\nimport {\n  ErrorMessage,\n  FormButtonWrapper,\n  FormInformLine,\n  FormWrapper,\n  Line,\n} from './styles';\n\nconst {\n  PLACEHOLDER_EMAIL,\n  PLACEHOLDER_MESSAGE,\n  PLACEHOLDER_NAME,\n  PLACEHOLDER_THEME,\n  BUTTON,\n} = FORM_TITLE;\n\nconst style = {\n  firstStage: {\n    color: theme.colors.Black,\n  },\n  secondStage: {\n    color: theme.colors.Black,\n  },\n};\n\nconst Form = (): ReturnComponentType => {\n  const {\n    register,\n    reset,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<IForm>({\n    resolver: yupResolver(schema.form),\n  });\n\n  const fieldsRegister = {\n    email: register('email', { required: true }),\n    name: register('name', { required: true }),\n    topic: register('topic', { required: true }),\n    message: register('message', { required: true }),\n  };\n\n  const { email, name, message, topic } = fieldsRegister;\n\n  const onSubmit: SubmitHandler<IForm> = data => {\n    sendEmailMessage<IForm>(data);\n    reset();\n  };\n\n  return (\n    <FormWrapper onSubmit={handleSubmit(onSubmit)}>\n      <FormInformLine>\n        <Line>\n          <PrimaryInput\n            placeholder={PLACEHOLDER_EMAIL}\n            styleOptions={style.firstStage}\n            ref={email.ref}\n            form={email}\n            error={errors.email?.message}\n            boxShadow\n          />\n          <ErrorMessage error={errors.email}>{errors.email?.message}</ErrorMessage>\n        </Line>\n        <Line>\n          <PrimaryInput\n            placeholder={PLACEHOLDER_NAME}\n            styleOptions={style.firstStage}\n            ref={name.ref}\n            form={name}\n            error={errors.name?.message}\n            boxShadow\n          />\n          <ErrorMessage error={errors.name}>{errors.name?.message}</ErrorMessage>\n        </Line>\n      </FormInformLine>\n      <Line>\n        <PrimaryInput\n          placeholder={PLACEHOLDER_THEME}\n          styleOptions={style.secondStage}\n          ref={topic.ref}\n          form={topic}\n          error={errors.topic?.message}\n          boxShadow\n        />\n        <ErrorMessage error={errors.topic}>{errors.topic?.message}</ErrorMessage>\n      </Line>\n      <Line>\n        <PrimaryInput\n          textAria\n          placeholder={PLACEHOLDER_MESSAGE}\n          styleOptions={style.secondStage}\n          ref={message.ref}\n          form={message}\n          error={errors.message?.message}\n          boxShadow\n        />\n        <ErrorMessage error={errors.message}>{errors.message?.message}</ErrorMessage>\n      </Line>\n      <FormButtonWrapper>\n        <PrimaryButton title={BUTTON} />\n      </FormButtonWrapper>\n    </FormWrapper>\n  );\n};\n\nexport default Form;\n","import styled from 'styled-components';\n\nimport theme from '@/theme';\n\nexport const Container = styled.li``;\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  > svg {\n    margin-right: ${theme.spaces[3]}px;\n  }\n`;\n","import React from 'react';\n\nimport { ReturnComponentType } from '@/commonTypes';\nimport TextComponent from '@/components/Text';\nimport TitleComponent from '@/components/Title';\nimport theme from '@/theme';\n\nimport { Container, TitleContainer } from './styles';\nimport { IListInfoContainer } from './types';\n\nconst ListInfoContainer: React.FC<IListInfoContainer> = ({\n  value: { title, text, Image },\n}): ReturnComponentType => (\n  <Container>\n    <TitleContainer>\n      <Image />\n      <TitleComponent title={title} fontSize={theme.textSize.sm} />\n    </TitleContainer>\n    <TextComponent text={text} top={theme.spaces[1]} />\n  </Container>\n);\n\nexport default ListInfoContainer;\n","import styled from 'styled-components';\n\nimport theme from '@/theme';\nimport { handleContainerStyles } from '@/utills';\n\nexport const Container = styled.section`\n  ${handleContainerStyles(theme.spaces[16])};\n`;\n\nexport const ContainerWrapper = styled.div`\n  ${theme.container};\n  align-items: flex-start;\n  flex-direction: column;\n`;\n\nexport const ContentContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const ContainerInfo = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: ${theme.spaces[10]}%;\n`;\n\nexport const ContainerTitle = styled.h1`\n  display: inline-block;\n  width: ${theme.spaces[8]}%;\n  font-size: ${theme.textSize.xlll}rem;\n  font-weight: bold;\n`;\n","import React, { memo } from 'react';\n\nimport { ReturnComponentType } from '@/commonTypes';\nimport Form from '@/components/Forms/Form';\nimport { ContactsSection } from '@/mocks';\n\nimport ListInfoContainer from './ListInfoContainer';\nimport {\n  Container,\n  ContainerInfo,\n  ContainerTitle,\n  ContainerWrapper,\n  ContentContainer,\n} from './styles';\nimport { IFirstSection } from './types';\n\nconst {\n  ContactsFirstSection: { info },\n} = ContactsSection;\n\nconst FirstSection: React.FC<IFirstSection> = ({ title }): ReturnComponentType => (\n  <Container>\n    <ContainerWrapper>\n      <ContentContainer>\n        <ContainerTitle>{title}</ContainerTitle>\n        <Form />\n      </ContentContainer>\n      <ContainerInfo>\n        {info.map(list => (\n          <ListInfoContainer key={list.id} value={list} />\n        ))}\n      </ContainerInfo>\n    </ContainerWrapper>\n  </Container>\n);\n\nexport default memo(FirstSection);\n","import styled from 'styled-components';\n\nimport theme from '@/theme';\n\nexport const SelectionWord = styled.span`\n  color: ${theme.colors.Primary};\n`;\n","import React from 'react';\n\nimport { ReturnComponentType } from '@/commonTypes';\n\nimport { SelectionWord } from './styles';\n\nconst SecondSelectionWordText = (): ReturnComponentType => (\n  <>\n    How can we <SelectionWord> help you?</SelectionWord>\n  </>\n);\n\nexport default SecondSelectionWordText;\n","import React, { memo } from 'react';\n\nimport { Icon } from 'leaflet';\nimport { Marker, Popup, useMapEvents } from 'react-leaflet';\n\nimport { ReturnComponentType } from '@/commonTypes';\nimport { PNG } from '@/constants';\n\nimport { ILocationMarker } from './types';\n\nconst { MapMark } = PNG;\n\nconst customMarker = new Icon({\n  iconUrl: MapMark,\n  iconSize: [25, 41],\n  iconAnchor: [10, 41],\n  popupAnchor: [2, -40],\n});\n\nconst LocationMarker: React.FC<ILocationMarker> = ({\n  text,\n  position,\n  callback,\n}): ReturnComponentType => {\n  const map = useMapEvents({\n    dblclick() {\n      map.locate();\n    },\n    locationfound(e) {\n      const { lat, lng } = e.latlng;\n      callback([lat, lng]);\n      map.flyTo(e.latlng, map.getZoom());\n    },\n  });\n\n  return (\n    <Marker position={position} icon={customMarker}>\n      <Popup>{text}</Popup>\n    </Marker>\n  );\n};\n\nexport default memo(LocationMarker);\n","import React, { useState } from 'react';\n\nimport 'leaflet/dist/leaflet.css';\nimport { LatLngTuple } from 'leaflet';\nimport { MapContainer, TileLayer } from 'react-leaflet';\n\nimport { ReturnComponentType } from '@/commonTypes';\nimport { ContactsSection } from '@/mocks';\nimport theme from '@/theme';\n\nimport LocationMarker from './Marker';\n\nconst {\n  ContactSecondSection: {\n    map: { location },\n    popUp: { text },\n  },\n} = ContactsSection;\n\nconst style = {\n  height: theme.spaces[14] * 6,\n};\n\nconst Map = (): ReturnComponentType => {\n  const [position, setPosition] = useState<LatLngTuple>(location.default);\n\n  return (\n    <MapContainer center={position} zoom={12} scrollWheelZoom style={style}>\n      <TileLayer\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        opacity={theme.opacity.opacity50}\n        zIndex={1}\n      />\n      <LocationMarker position={position} callback={setPosition} text={text} />\n    </MapContainer>\n  );\n};\n\nexport default Map;\n","import React from 'react';\n\nimport { ReturnComponentType } from '@/commonTypes';\nimport Map from '@/components/Map';\n\nconst SectionTwo = (): ReturnComponentType => <Map />;\n\nexport default SectionTwo;\n","import styled from 'styled-components';\n\nimport theme from '@/theme';\n\nexport const MainContainer = styled.main`\n  display: flex;\n  flex-direction: column;\n  background-color: ${theme.colors.Tertiary};\n`;\n","import React from 'react';\n\nimport { ReturnComponentType } from '@/commonTypes';\n\nimport SectionOne from './SectionOne';\nimport SecondSelectionWordText from './SectionOne/SecondSelectionWordText';\nimport SectionTwo from './SectionTwo';\nimport { MainContainer } from './styles';\n\nconst ContactsPage = (): ReturnComponentType => (\n  <MainContainer>\n    <SectionOne title={<SecondSelectionWordText />} />\n    <SectionTwo />\n  </MainContainer>\n);\n\nexport default ContactsPage;\n"],"names":["FormWrapper","styled","theme","FormInformLine","FormButtonWrapper","Line","ErrorMessage","error","PLACEHOLDER_EMAIL","FORM_TITLE","PLACEHOLDER_MESSAGE","PLACEHOLDER_NAME","PLACEHOLDER_THEME","BUTTON","style","firstStage","color","secondStage","useForm","resolver","yupResolver","schema","register","reset","handleSubmit","errors","formState","fieldsRegister","email","required","name","topic","message","onSubmit","data","sendEmailMessage","placeholder","styleOptions","ref","form","boxShadow","textAria","PrimaryButton","title","Container","TitleContainer","value","text","Image","Title","fontSize","Text","top","handleContainerStyles","ContainerWrapper","ContentContainer","ContainerInfo","ContainerTitle","info","ContactsSection","FirstSection","map","list","id","memo","SelectionWord","MapMark","PNG","customMarker","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","LocationMarker","position","callback","useMapEvents","dblclick","locate","locationfound","e","latlng","lat","lng","flyTo","getZoom","Marker","icon","Popup","location","popUp","height","useState","default","setPosition","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","opacity","zIndex","MainContainer","SectionOne"],"sourceRoot":""}