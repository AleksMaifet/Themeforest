{"version":3,"file":"static/js/445.2a0dcd50.chunk.js","mappings":"uRAKaA,EAAcC,EAAAA,GAAAA,KAAW,4FAGR,EAAnBC,EAAAA,EAAAA,OAAAA,KAGEC,EAAiBF,EAAAA,GAAAA,IAAU,4FAG7BC,EAAAA,EAAAA,OAAAA,KAGEE,EAAoBH,EAAAA,GAAAA,IAAU,iFAChCC,EAAAA,EAAAA,OAAAA,IAEKA,EAAAA,EAAAA,OAAAA,IAGHG,EAAOJ,EAAAA,GAAAA,IAAU,sBAEjBK,EAAeL,EAAAA,GAAAA,EAAQ,iLACxBC,EAAAA,EAAAA,OAAAA,GAAkB,EAEfA,EAAAA,EAAAA,SAAAA,GACJA,EAAAA,EAAAA,OAAAA,MACCA,EAAAA,EAAAA,OAAAA,IAGG,YAAQ,SAALK,MAAqB,UAAO,EAAE,I,SCX9CC,EAKEC,EAAAA,GAAAA,kBAJFC,EAIED,EAAAA,GAAAA,oBAHFE,EAGEF,EAAAA,GAAAA,iBAFFG,EAEEH,EAAAA,GAAAA,kBADFI,EACEJ,EAAAA,GAAAA,OAEEK,EAAQ,CACZC,WAAY,CACVC,MAAOd,EAAAA,EAAAA,OAAAA,OAETe,YAAa,CACXD,MAAOd,EAAAA,EAAAA,OAAAA,QAgFX,EA5Ea,WAA4B,IAAD,gBACtC,GAKIgB,EAAAA,EAAAA,IAAe,CACjBC,UAAUC,EAAAA,EAAAA,GAAYC,EAAAA,GAAAA,QALtBC,EAAQ,EAARA,SACAC,EAAK,EAALA,MACAC,EAAY,EAAZA,aACaC,EAAM,EAAnBC,UAAaD,OAKTE,EAAiB,CACrBC,MAAON,EAAS,QAAS,CAAEO,UAAU,IACrCC,KAAMR,EAAS,OAAQ,CAAEO,UAAU,IACnCE,MAAOT,EAAS,QAAS,CAAEO,UAAU,IACrCG,QAASV,EAAS,UAAW,CAAEO,UAAU,KAGnCD,EAAgCD,EAAhCC,MAAOE,EAAyBH,EAAzBG,KAAME,EAAmBL,EAAnBK,QAASD,EAAUJ,EAAVI,MAO9B,OACE,UAAC/B,EAAW,CAACiC,SAAUT,GANc,SAAAU,IACrCC,EAAAA,EAAAA,GAAwBD,GACxBX,GACF,IAGgD,WAC5C,UAACpB,EAAc,YACb,UAACE,EAAI,YACH,SAAC,IAAY,CACX+B,YAAa5B,EACb6B,aAAcvB,EAAMC,WACpBuB,IAAKV,EAAMU,IACXC,KAAMX,EACNrB,MAAmB,QAAd,EAAEkB,EAAOG,aAAK,aAAZ,EAAcI,WAEvB,SAAC1B,EAAY,CAACC,MAAOkB,EAAOG,MAAM,SAAc,QAAd,EAAEH,EAAOG,aAAK,aAAZ,EAAcI,cAEpD,UAAC3B,EAAI,YACH,SAAC,IAAY,CACX+B,YAAazB,EACb0B,aAAcvB,EAAMC,WACpBuB,IAAKR,EAAKQ,IACVC,KAAMT,EACNvB,MAAkB,QAAb,EAAEkB,EAAOK,YAAI,aAAX,EAAaE,WAEtB,SAAC1B,EAAY,CAACC,MAAOkB,EAAOK,KAAK,SAAa,QAAb,EAAEL,EAAOK,YAAI,aAAX,EAAaE,iBAGpD,UAAC3B,EAAI,YACH,SAAC,IAAY,CACX+B,YAAaxB,EACbyB,aAAcvB,EAAMG,YACpBqB,IAAKP,EAAMO,IACXC,KAAMR,EACNxB,MAAmB,QAAd,EAAEkB,EAAOM,aAAK,aAAZ,EAAcC,WAEvB,SAAC1B,EAAY,CAACC,MAAOkB,EAAOM,MAAM,SAAc,QAAd,EAAEN,EAAOM,aAAK,aAAZ,EAAcC,cAEpD,UAAC3B,EAAI,YACH,SAAC,IAAY,CACXmC,UAAQ,EACRJ,YAAa1B,EACb2B,aAAcvB,EAAMG,YACpBqB,IAAKN,EAAQM,IACbC,KAAMP,EACNzB,MAAqB,QAAhB,EAAEkB,EAAOO,eAAO,aAAd,EAAgBA,WAEzB,SAAC1B,EAAY,CAACC,MAAOkB,EAAOO,QAAQ,SAAgB,QAAhB,EAAEP,EAAOO,eAAO,aAAd,EAAgBA,cAExD,SAAC5B,EAAiB,WAChB,SAACqC,EAAA,EAAa,CAACC,MAAO7B,QAI9B,EC3Ga8B,EAAY1C,EAAAA,GAAAA,QAAc,gCACnC2C,EAAAA,EAAAA,GAAsB1C,EAAAA,EAAAA,OAAAA,MAGb2C,EAAmB5C,EAAAA,GAAAA,IAAU,2DACtCC,EAAAA,EAAAA,WAIS4C,EAAiB7C,EAAAA,GAAAA,GAAS,6GAE5BC,EAAAA,EAAAA,OAAAA,GACIA,EAAAA,EAAAA,SAAAA,MCTT6C,EAAwC,SAAH,OAAML,EAAK,EAALA,MAAK,OACpD,SAACC,EAAS,WACR,UAACE,EAAgB,YACf,SAACC,EAAc,UAAEJ,KACjB,SAAC,EAAI,QAEG,EAGd,GAAeM,EAAAA,EAAAA,MAAKD,GCbPE,EAAgBhD,EAAAA,GAAAA,KAAW,sCAC7BC,EAAAA,EAAAA,OAAAA,SCOX,EANgC,WAAH,OAC3B,+CACa,SAAC+C,EAAa,2BACxB,ECLQC,EAAgBjD,EAAAA,GAAAA,KAAW,8FAGlBC,EAAAA,EAAAA,OAAAA,UCOtB,EANqB,WAAH,OAChB,SAACgD,EAAa,WACZ,SAACC,EAAU,CAACT,OAAO,SAAC,EAAuB,OAC7B,C","sources":["components/Forms/Form/styles.ts","components/Forms/Form/index.tsx","components/Main/Contacts/SectionOne/styles.ts","components/Main/Contacts/SectionOne/index.tsx","components/Main/Contacts/SectionOne/SecondSelectionWordText/styles.ts","components/Main/Contacts/SectionOne/SecondSelectionWordText/index.tsx","components/Main/Contacts/styles.ts","components/Main/Contacts/index.tsx"],"sourcesContent":["import { FieldError } from 'react-hook-form';\nimport styled from 'styled-components';\n\nimport theme from '@/theme';\n\nexport const FormWrapper = styled.form`\n  display: inline-flex;\n  flex-direction: column;\n  width: ${theme.spaces[15] * 4}px;\n`;\n\nexport const FormInformLine = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: ${theme.spaces[14]}%;\n`;\n\nexport const FormButtonWrapper = styled.div`\n  width: ${theme.spaces[14]}%;\n  text-align: end;\n  margin-top: ${theme.spaces[2]}px;\n`;\n\nexport const Line = styled.div``;\n\nexport const ErrorMessage = styled.p<{ error?: FieldError }>`\n  height: ${theme.spaces[4] + 1}px;\n  text-align: center;\n  font-size: ${theme.textSize.sm}rem;\n  color: ${theme.colors.Error};\n  margin: ${theme.spaces[2]}px 0;\n\n  :before {\n    content: ${({ error }) => (error ? 'âš  ' : '')};\n    display: inline;\n`;\n","import React from 'react';\n\nimport { yupResolver } from '@hookform/resolvers/yup/dist/yup';\nimport { SubmitHandler, useForm } from 'react-hook-form';\n\nimport { ReturnComponentType } from '@/commonTypes';\nimport PrimaryButton from '@/components/Buttons/PrimaryButton';\nimport { IForm } from '@/components/Forms/types';\nimport PrimaryInput from '@/components/Input';\nimport { FORM_TITLE, schema } from '@/constants';\nimport theme from '@/theme';\nimport { sendEmailMessage } from '@/utills';\n\nimport {\n  ErrorMessage,\n  FormButtonWrapper,\n  FormInformLine,\n  FormWrapper,\n  Line,\n} from './styles';\n\nconst {\n  PLACEHOLDER_EMAIL,\n  PLACEHOLDER_MESSAGE,\n  PLACEHOLDER_NAME,\n  PLACEHOLDER_THEME,\n  BUTTON,\n} = FORM_TITLE;\n\nconst style = {\n  firstStage: {\n    color: theme.colors.Black,\n  },\n  secondStage: {\n    color: theme.colors.Black,\n  },\n};\n\nconst Form = (): ReturnComponentType => {\n  const {\n    register,\n    reset,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<IForm>({\n    resolver: yupResolver(schema.form),\n  });\n\n  const fieldsRegister = {\n    email: register('email', { required: true }),\n    name: register('name', { required: true }),\n    topic: register('topic', { required: true }),\n    message: register('message', { required: true }),\n  };\n\n  const { email, name, message, topic } = fieldsRegister;\n\n  const onSubmit: SubmitHandler<IForm> = data => {\n    sendEmailMessage<IForm>(data);\n    reset();\n  };\n\n  return (\n    <FormWrapper onSubmit={handleSubmit(onSubmit)}>\n      <FormInformLine>\n        <Line>\n          <PrimaryInput\n            placeholder={PLACEHOLDER_EMAIL}\n            styleOptions={style.firstStage}\n            ref={email.ref}\n            form={email}\n            error={errors.email?.message}\n          />\n          <ErrorMessage error={errors.email}>{errors.email?.message}</ErrorMessage>\n        </Line>\n        <Line>\n          <PrimaryInput\n            placeholder={PLACEHOLDER_NAME}\n            styleOptions={style.firstStage}\n            ref={name.ref}\n            form={name}\n            error={errors.name?.message}\n          />\n          <ErrorMessage error={errors.name}>{errors.name?.message}</ErrorMessage>\n        </Line>\n      </FormInformLine>\n      <Line>\n        <PrimaryInput\n          placeholder={PLACEHOLDER_THEME}\n          styleOptions={style.secondStage}\n          ref={topic.ref}\n          form={topic}\n          error={errors.topic?.message}\n        />\n        <ErrorMessage error={errors.topic}>{errors.topic?.message}</ErrorMessage>\n      </Line>\n      <Line>\n        <PrimaryInput\n          textAria\n          placeholder={PLACEHOLDER_MESSAGE}\n          styleOptions={style.secondStage}\n          ref={message.ref}\n          form={message}\n          error={errors.message?.message}\n        />\n        <ErrorMessage error={errors.message}>{errors.message?.message}</ErrorMessage>\n      </Line>\n      <FormButtonWrapper>\n        <PrimaryButton title={BUTTON} />\n      </FormButtonWrapper>\n    </FormWrapper>\n  );\n};\n\nexport default Form;\n","import styled from 'styled-components';\n\nimport theme from '@/theme';\nimport { handleContainerStyles } from '@/utills';\n\nexport const Container = styled.section`\n  ${handleContainerStyles(theme.spaces[16])};\n`;\n\nexport const ContainerWrapper = styled.div`\n  ${theme.container};\n  align-items: flex-start;\n`;\n\nexport const ContainerTitle = styled.h1`\n  display: inline-block;\n  width: ${theme.spaces[8]}%;\n  font-size: ${theme.textSize.xlll}rem;\n  font-weight: bold;\n`;\n","import React, { memo } from 'react';\n\nimport { ReturnComponentType } from '@/commonTypes';\nimport Form from '@/components/Forms/Form';\n\nimport { Container, ContainerTitle, ContainerWrapper } from './styles';\nimport { IFirstSection } from './types';\n\nconst FirstSection: React.FC<IFirstSection> = ({ title }): ReturnComponentType => (\n  <Container>\n    <ContainerWrapper>\n      <ContainerTitle>{title}</ContainerTitle>\n      <Form />\n    </ContainerWrapper>\n  </Container>\n);\n\nexport default memo(FirstSection);\n","import styled from 'styled-components';\n\nimport theme from '@/theme';\n\nexport const SelectionWord = styled.span`\n  color: ${theme.colors.Primary};\n`;\n","import React from 'react';\n\nimport { ReturnComponentType } from '@/commonTypes';\n\nimport { SelectionWord } from './styles';\n\nconst SecondSelectionWordText = (): ReturnComponentType => (\n  <>\n    How can we <SelectionWord> help you?</SelectionWord>\n  </>\n);\n\nexport default SecondSelectionWordText;\n","import styled from 'styled-components';\n\nimport theme from '@/theme';\n\nexport const MainContainer = styled.main`\n  display: flex;\n  flex-direction: column;\n  background-color: ${theme.colors.Tertiary};\n`;\n","import React from 'react';\n\nimport { ReturnComponentType } from '@/commonTypes';\nimport SectionOne from '@/components/Main/Contacts/SectionOne';\n\nimport SecondSelectionWordText from './SectionOne/SecondSelectionWordText';\nimport { MainContainer } from './styles';\n\nconst ContactsPage = (): ReturnComponentType => (\n  <MainContainer>\n    <SectionOne title={<SecondSelectionWordText />} />\n  </MainContainer>\n);\n\nexport default ContactsPage;\n"],"names":["FormWrapper","styled","theme","FormInformLine","FormButtonWrapper","Line","ErrorMessage","error","PLACEHOLDER_EMAIL","FORM_TITLE","PLACEHOLDER_MESSAGE","PLACEHOLDER_NAME","PLACEHOLDER_THEME","BUTTON","style","firstStage","color","secondStage","useForm","resolver","yupResolver","schema","register","reset","handleSubmit","errors","formState","fieldsRegister","email","required","name","topic","message","onSubmit","data","sendEmailMessage","placeholder","styleOptions","ref","form","textAria","PrimaryButton","title","Container","handleContainerStyles","ContainerWrapper","ContainerTitle","FirstSection","memo","SelectionWord","MainContainer","SectionOne"],"sourceRoot":""}